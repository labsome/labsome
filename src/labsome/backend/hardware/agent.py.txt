#!/usr/bin/python
import sys
import time
import logging
from argparse import ArgumentParser
from hashlib import md5
from urllib2 import urlopen
from urlparse import urljoin

logger = logging.getLogger(__name__)

def log_to_console():
    root = logging.getLogger()
    root.setLevel(logging.DEBUG)
    ch = logging.StreamHandler(sys.stdout)
    ch.setLevel(logging.DEBUG)
    formatter = logging.Formatter('[%(asctime)s] %(levelname)5s: %(message)s')
    ch.setFormatter(formatter)
    root.addHandler(ch)

def get_heartbeat_code(url):
    heartbeat_code_url = urljoin(url, '/api/servers/v1/code/heartbeat.py')
    logger.debug('Downloading heartbeat code from {}'.format(heartbeat_code_url))
    heartbeat_code = urlopen(heartbeat_code_url).read()
    heartbeat_md5 = md5(heartbeat_code).hexdigest()
    logger.debug('Received heartbeat code with MD5={}'.format(heartbeat_md5))
    return heartbeat_code

def run_once(url):
    logger.info('Running once: url={!r}'.format(url))
    heartbeat_code = get_heartbeat_code(url)
    logger.info('Starting to run heartbeat code')
    exec heartbeat_code in {'LABSOME_URL': url}
    logger.info('Finished running heartbeat code')

def main():
    parser = ArgumentParser()
    parser.add_argument('url', help='Labsome URL in the format of http[s]://host:port')
    parser.add_argument('-i', '--interval', type=int, default=60,
                        help='Frequency of sending updates to Labsome.')
    args = parser.parse_args()
    log_to_console()

    while True:
        try:
            run_once(args.url)
        except KeyboardInterrupt:
            raise
        except Exception as error:
            logger.exception('Error in main loop')
        else:
            logger.info('Done running, sleeping for {} seconds'.format(args.interval))
        time.sleep(max(args.interval, 1))

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        logger.info('Got CTRL+C')
